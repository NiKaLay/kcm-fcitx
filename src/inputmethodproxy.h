/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -p inputmethodproxy -c InputMethodProxy org.fcitx.Fcitx.InputMethod.xml -i im.h
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef INPUTMETHODPROXY_H_1344587527
#define INPUTMETHODPROXY_H_1344587527

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "im.h"

namespace Fcitx {

/*
 * Proxy class for interface org.fcitx.Fcitx.InputMethod
 */
class InputMethodProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.fcitx.Fcitx.InputMethod"; }

public:
    InputMethodProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~InputMethodProxy();

    Q_PROPERTY(Fcitx::IMList IMList READ iMList WRITE setIMList)
    inline Fcitx::IMList iMList() const
    { return qvariant_cast< Fcitx::IMList >(property("IMList")); }
    inline void setIMList(Fcitx::IMList value)
    { setProperty("IMList", QVariant::fromValue(value)); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> GetIMAddon(const QString &im)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(im);
        return asyncCallWithArgumentList(QLatin1String("GetIMAddon"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

}

#endif
